// src/lib/types.ts

// Assuming User is already defined from Supabase or a previous example
export interface User {
  id: string;
  email?: string;
  // other user fields
}
export interface Participant {
  id: string; // UUID generated by Supabase
  name: string;
  picture_url: string; // URL to the participant's image
  country: string;
  age: number;
  description?: string; // <-- ADDED: Optional description field
  created_at?: string; // Supabase automatically adds this
}

// Form data type, useful for managing form state. Age as string for input handling.
export type ParticipantFormData = Omit<Participant, 'id' | 'created_at' | 'age'> & {
  age: string; // Keep as string for form input, convert to number on submission
  description: string; // <-- ADDED: Description field for the form (make it non-optional for form, empty string default)
};

export interface Vote {
  id?: string; // UUID generated by Supabase
  participant_id: string;
  voter_identifier: string; // Could be client-generated ID, hashed IP, user ID, etc.
  created_at?: string;
}